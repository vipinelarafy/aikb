'use client'; import { useState } from 'react';
export default function CustomersPage(){ const [payload,setPayload]=useState({username:'',password:'',name:'',retell_workspace_id:'',knowledge_base_id:''}); const [out,setOut]=useState<string|null>(null); const [err,setErr]=useState<string|null>(null); async function onSubmit(e:React.FormEvent){ e.preventDefault(); setErr(null); setOut(null); const r=await fetch('/api/customers',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(payload)}); const d=await r.json(); if(!r.ok){ setErr(d?.error||'Failed'); return;} setOut(d.env);} return(<div className='card'><h1>Create 1 Customer (MVP)</h1><p>Paste env lines into Vercel → Settings → Environment Variables, then redeploy.</p><form onSubmit={onSubmit} className='space-y-2'><input className='input' placeholder='Customer username' value={payload.username} onChange={e=>setPayload({...payload,username:e.target.value})} /><input type='password' className='input' placeholder='Temporary password' value={payload.password} onChange={e=>setPayload({...payload,password:e.target.value})} /><input className='input' placeholder='Customer name' value={payload.name} onChange={e=>setPayload({...payload,name:e.target.value})} /><input className='input' placeholder='Retell Workspace ID (workspace_...)' value={payload.retell_workspace_id} onChange={e=>setPayload({...payload,retell_workspace_id:e.target.value})} /><input className='input' placeholder='Knowledge Base ID (kb_...)' value={payload.knowledge_base_id} onChange={e=>setPayload({...payload,knowledge_base_id:e.target.value})} /><div className='row'><button className='btn' type='submit'>Generate Env Vars</button><a className='btn secondary' href='/admin/login'>Logout</a></div></form>{out && (<div style={{marginTop:12}}><h3>Env to set:</h3><pre className='card' style={{whiteSpace:'pre-wrap'}}>{out}</pre></div>)}{err && <div style={{color:'crimson'}}>{err}</div>}</div>);} 
